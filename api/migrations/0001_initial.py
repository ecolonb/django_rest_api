# Generated by Django 2.2.1 on 2019-07-17 15:53

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AccessLog',
            fields=[
                ('idaccesslog', models.AutoField(db_column='idAccessLog', primary_key=True, serialize=False)),
                ('system', models.CharField(max_length=18)),
                ('ip', models.CharField(max_length=18)),
                ('useragent', models.CharField(db_column='userAgent', max_length=150)),
                ('date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'access_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ActualDates',
            fields=[
                ('id', models.AutoField(db_column='id', primary_key=True, serialize=False)),
                ('days_to_deliver', models.IntegerField()),
                ('date_delivery_promise', models.DateTimeField(blank=True, null=True)),
                ('actual_pickup', models.DateTimeField(blank=True, null=True)),
                ('actual_delivery', models.DateTimeField(blank=True, null=True)),
                ('received_by', models.CharField(blank=True, max_length=191, null=True)),
                ('date_delivery_promise_2', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'actual_dates',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Addresses',
            fields=[
                ('idaddress', models.AutoField(db_column='idAddress', primary_key=True, serialize=False)),
                ('label', models.CharField(blank=True, max_length=250, null=True)),
                ('firstname', models.CharField(blank=True, db_column='firstName', max_length=150, null=True)),
                ('lastname', models.CharField(blank=True, db_column='lastName', max_length=150, null=True)),
                ('email', models.CharField(blank=True, max_length=250, null=True)),
                ('company', models.CharField(blank=True, max_length=100, null=True)),
                ('rfc', models.CharField(blank=True, db_column='RFC', max_length=13, null=True)),
                ('phone', models.CharField(blank=True, max_length=45, null=True)),
                ('address1', models.CharField(blank=True, max_length=250, null=True)),
                ('externalnumber', models.CharField(db_column='externalNumber', max_length=191)),
                ('colonia', models.CharField(blank=True, max_length=250, null=True)),
                ('crossstreet', models.CharField(blank=True, db_column='crossStreet', max_length=35, null=True)),
                ('reference', models.CharField(blank=True, max_length=200, null=True)),
                ('delegation', models.CharField(blank=True, max_length=120, null=True)),
                ('city', models.CharField(blank=True, max_length=120, null=True)),
                ('zipcode', models.CharField(blank=True, db_column='zipCode', max_length=18, null=True)),
                ('state', models.CharField(blank=True, max_length=60, null=True)),
                ('country', models.CharField(blank=True, max_length=60, null=True)),
                ('idzipcode', models.IntegerField(blank=True, db_column='idZipCode', null=True)),
                ('active', models.IntegerField()),
                ('type', models.CharField(max_length=18)),
                ('senderdefault', models.IntegerField(db_column='senderDefault')),
                ('created', models.DateTimeField()),
                ('modified', models.DateTimeField()),
            ],
            options={
                'db_table': 'addresses',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ApiLog',
            fields=[
                ('id', models.AutoField(db_column='id', primary_key=True, serialize=False)),
                ('iduser', models.IntegerField(db_column='idUser')),
                ('request', models.TextField()),
                ('response', models.TextField()),
                ('services', models.CharField(max_length=191)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'api_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Banners',
            fields=[
                ('idbanner', models.AutoField(db_column='idBanner', primary_key=True, serialize=False)),
                ('bannerfilename', models.CharField(db_column='bannerFilename', max_length=250)),
                ('width', models.IntegerField()),
                ('height', models.IntegerField()),
                ('bannerlink', models.CharField(db_column='bannerLink', max_length=255)),
                ('idsection', models.IntegerField(db_column='idSection')),
                ('idsectionbanner', models.IntegerField(db_column='idSectionBanner')),
                ('bannertext', models.CharField(db_column='bannerText', max_length=250)),
                ('description', models.CharField(max_length=500)),
            ],
            options={
                'db_table': 'banners',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BulkQuotations',
            fields=[
                ('idbulkquotation', models.AutoField(db_column='idBulkQuotation', primary_key=True, serialize=False)),
                ('iduser', models.IntegerField(db_column='idUser')),
                ('groupquotation', models.CharField(db_column='groupQuotation', max_length=25)),
                ('orders', models.TextField()),
                ('criteria', models.CharField(max_length=24)),
                ('status', models.IntegerField()),
                ('created', models.DateTimeField()),
                ('modified', models.DateTimeField()),
            ],
            options={
                'db_table': 'bulk_quotations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CarrierLabel',
            fields=[
                ('idcarrierlabel', models.AutoField(db_column='idCarrierLabel', primary_key=True, serialize=False)),
                ('idcarrier', models.IntegerField(db_column='idCarrier')),
                ('size', models.CharField(max_length=191)),
                ('type', models.CharField(max_length=191)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'carrier_label',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Carriers',
            fields=[
                ('idcarrier', models.AutoField(db_column='idCarrier', primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=10)),
                ('carrier', models.CharField(max_length=150)),
                ('comercialname', models.CharField(blank=True, db_column='comercialName', max_length=191, null=True)),
                ('deadlineminutesmargin', models.IntegerField(db_column='deadlineMinutesMargin')),
                ('description', models.TextField(blank=True, null=True)),
                ('imagesmall', models.CharField(blank=True, db_column='imageSmall', max_length=250, null=True)),
                ('imagelarge', models.CharField(blank=True, db_column='imageLarge', max_length=250, null=True)),
                ('processtype', models.CharField(db_column='processType', max_length=45)),
                ('status', models.IntegerField()),
                ('ispro', models.IntegerField(db_column='isPro')),
                ('isapi', models.IntegerField(db_column='isApi')),
                ('contractdiscount', models.FloatField(db_column='contractDiscount')),
                ('hourlimitrecolection', models.CharField(db_column='hourLimitRecolection', max_length=191)),
                ('ratetype', models.IntegerField(db_column='rateType')),
                ('multipackage', models.IntegerField()),
                ('environment', models.CharField(blank=True, max_length=18, null=True)),
                ('created', models.DateTimeField()),
                ('modified', models.DateTimeField()),
            ],
            options={
                'db_table': 'carriers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CashbackAssignmentsToGroups',
            fields=[
                ('id', models.AutoField(db_column='id', primary_key=True, serialize=False)),
                ('idcashback', models.IntegerField(db_column='idCashback')),
                ('idusergroup', models.IntegerField(db_column='idUserGroup')),
                ('movement', models.IntegerField()),
                ('created', models.DateTimeField()),
            ],
            options={
                'db_table': 'cashback_assignments_to_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Cashbacks',
            fields=[
                ('idcashback', models.AutoField(db_column='idCashback', primary_key=True, serialize=False)),
                ('cashback', models.CharField(max_length=48)),
                ('from_field', models.IntegerField(blank=True, db_column='from', null=True)),
                ('percentage', models.IntegerField()),
                ('description', models.CharField(blank=True, max_length=124, null=True)),
                ('created', models.DateTimeField()),
            ],
            options={
                'db_table': 'cashbacks',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ConfigCarriersByUser',
            fields=[
                ('idconfigcarrierbyuser', models.AutoField(db_column='idConfigCarrierByUser', primary_key=True, serialize=False)),
                ('iduser', models.IntegerField(db_column='idUser')),
                ('idcarrier', models.IntegerField(db_column='idCarrier')),
                ('active', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'config_carriers_by_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Configs',
            fields=[
                ('idconfig', models.AutoField(db_column='idConfig', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=45, null=True)),
                ('status', models.CharField(blank=True, max_length=45, null=True)),
                ('type', models.CharField(blank=True, max_length=45, null=True)),
                ('values', models.CharField(max_length=120)),
                ('modified', models.DateTimeField()),
            ],
            options={
                'db_table': 'configs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Constraints',
            fields=[
                ('idconstraint', models.AutoField(db_column='idConstraint', primary_key=True, serialize=False)),
                ('idzipcode', models.IntegerField(db_column='idZipCode')),
                ('idcarrier', models.IntegerField(db_column='idCarrier')),
                ('isremote', models.IntegerField(db_column='isRemote')),
                ('frequency', models.CharField(max_length=120)),
                ('deniedservices', models.CharField(db_column='deniedServices', max_length=40)),
                ('ocurre', models.IntegerField()),
                ('additionaldays', models.CharField(db_column='additionalDays', max_length=40)),
            ],
            options={
                'db_table': 'constraints',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Counters',
            fields=[
                ('id', models.AutoField(db_column='id', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=45)),
                ('value', models.IntegerField()),
            ],
            options={
                'db_table': 'counters',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Countries',
            fields=[
                ('idcountry', models.AutoField(db_column='idCountry', primary_key=True, serialize=False)),
                ('country', models.CharField(max_length=250)),
                ('isocode', models.CharField(db_column='isoCode', max_length=2)),
                ('created', models.DateTimeField()),
                ('modified', models.DateTimeField()),
            ],
            options={
                'db_table': 'countries',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Coupons',
            fields=[
                ('idcoupon', models.AutoField(db_column='idCoupon', primary_key=True, serialize=False)),
                ('coupon', models.CharField(max_length=150)),
                ('code', models.CharField(max_length=100)),
                ('percentage', models.IntegerField(blank=True, null=True)),
                ('amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('type', models.IntegerField()),
                ('maxclientuses', models.IntegerField(db_column='maxClientUses')),
                ('maxcoupons', models.IntegerField(db_column='maxCoupons')),
                ('available', models.IntegerField()),
                ('deleted', models.IntegerField()),
                ('validfrom', models.DateTimeField(blank=True, db_column='validFrom', null=True)),
                ('validto', models.DateTimeField(blank=True, db_column='validTo', null=True)),
                ('created', models.DateTimeField()),
                ('modified', models.DateTimeField()),
            ],
            options={
                'db_table': 'coupons',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CreditBonus',
            fields=[
                ('idcreditbonus', models.AutoField(db_column='idCreditBonus', primary_key=True, serialize=False)),
                ('description', models.CharField(blank=True, max_length=100, null=True)),
                ('amount', models.FloatField()),
                ('bonusamount', models.FloatField(db_column='bonusAmount')),
                ('bonuspercentage', models.FloatField(db_column='bonusPercentage')),
                ('created', models.DateTimeField()),
                ('modified', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'credit_bonus',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dealers',
            fields=[
                ('iddealer', models.AutoField(db_column='idDealer', primary_key=True, serialize=False)),
                ('idcoupon', models.IntegerField(db_column='idCoupon')),
                ('name', models.CharField(max_length=45)),
                ('description', models.CharField(blank=True, max_length=45, null=True)),
                ('commissionpercentage', models.FloatField(db_column='commissionPercentage')),
                ('stringid', models.CharField(db_column='stringId', max_length=12)),
                ('active', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'dealers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DiscountByCarrier',
            fields=[
                ('iddiscountbycarrier', models.AutoField(db_column='idDiscountByCarrier', primary_key=True, serialize=False)),
                ('discount', models.FloatField()),
            ],
            options={
                'db_table': 'discount_by_carrier',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Discounts',
            fields=[
                ('iddiscount', models.AutoField(db_column='idDiscount', primary_key=True, serialize=False)),
                ('from_field', models.IntegerField(db_column='from')),
                ('to', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('modified_at', models.DateTimeField()),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'discounts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ecommerce',
            fields=[
                ('idecommerce', models.AutoField(db_column='idEcommerce', primary_key=True, serialize=False)),
                ('ecommerce', models.CharField(max_length=120)),
                ('description', models.CharField(max_length=120)),
                ('status', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ecommerce',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EcommerceVersions',
            fields=[
                ('idecommerceversion', models.AutoField(db_column='idEcommerceVersion', primary_key=True, serialize=False)),
                ('idecommerce', models.IntegerField(db_column='idEcommerce')),
                ('version', models.CharField(max_length=120)),
                ('technology', models.CharField(blank=True, max_length=28, null=True)),
                ('status', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ecommerce_versions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventoInnohub',
            fields=[
                ('idrecord', models.AutoField(db_column='idRecord', primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=100)),
                ('email', models.CharField(max_length=100)),
                ('asistencia', models.CharField(max_length=10)),
                ('acompanantes', models.CharField(max_length=255)),
                ('created', models.DateTimeField()),
                ('modified', models.DateTimeField()),
            ],
            options={
                'db_table': 'evento_innohub',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FailedJobs',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('connection', models.TextField()),
                ('queue', models.TextField()),
                ('payload', models.TextField()),
                ('exception', models.TextField()),
                ('failed_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'failed_jobs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GuideErrors',
            fields=[
                ('idguideerror', models.AutoField(db_column='idGuideError', primary_key=True, serialize=False)),
                ('idusercredit', models.IntegerField(blank=True, db_column='idUserCredit', null=True)),
                ('error', models.CharField(max_length=255)),
                ('status', models.SmallIntegerField()),
                ('feedback', models.CharField(blank=True, max_length=255, null=True)),
                ('created', models.DateTimeField()),
                ('modified', models.DateTimeField()),
                ('trace', models.TextField()),
            ],
            options={
                'db_table': 'guide_errors',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Guides',
            fields=[
                ('idguide', models.AutoField(db_column='idGuide', primary_key=True, serialize=False)),
                ('guide', models.CharField(max_length=45)),
                ('status', models.IntegerField()),
                ('type', models.CharField(max_length=45)),
                ('typeid', models.IntegerField(db_column='typeId')),
                ('isadvances', models.IntegerField(db_column='isAdvances')),
                ('iduser', models.IntegerField(blank=True, db_column='idUser', null=True)),
            ],
            options={
                'db_table': 'guides',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Insurances',
            fields=[
                ('idinsurance', models.AutoField(db_column='idInsurance', primary_key=True, serialize=False)),
                ('trackingcode', models.CharField(db_column='trackingCode', max_length=191)),
                ('insurancecode', models.CharField(blank=True, db_column='insuranceCode', max_length=191, null=True)),
                ('idcarrier', models.IntegerField(db_column='idCarrier')),
                ('reference', models.CharField(blank=True, max_length=191, null=True)),
                ('amountinsurancews', models.CharField(blank=True, db_column='amountInsuranceWS', max_length=191, null=True)),
                ('status', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'insurances',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Jobs',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('queue', models.CharField(max_length=191)),
                ('payload', models.TextField()),
                ('attempts', models.PositiveIntegerField()),
                ('reserved_at', models.PositiveIntegerField(blank=True, null=True)),
                ('available_at', models.PositiveIntegerField()),
                ('created_at', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'jobs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Locations',
            fields=[
                ('idlocation', models.AutoField(db_column='idLocation', primary_key=True, serialize=False)),
                ('iduserecommerce', models.IntegerField(db_column='idUserEcommerce')),
                ('idlocationitem', models.BigIntegerField(db_column='idLocationItem')),
                ('idlocationecommerce', models.BigIntegerField(db_column='idLocationEcommerce')),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'locations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MatrixZones',
            fields=[
                ('idmatrixzone', models.AutoField(db_column='idMatrixZone', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'matrix_zones',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MultiPayments',
            fields=[
                ('idmultipayment', models.AutoField(db_column='idMultiPayment', primary_key=True, serialize=False)),
                ('tax', models.FloatField()),
                ('total', models.FloatField()),
                ('status', models.IntegerField()),
                ('paymentmethod', models.CharField(db_column='paymentMethod', max_length=50)),
                ('paymentreference', models.CharField(db_column='paymentReference', max_length=45)),
                ('created', models.DateTimeField()),
                ('modified', models.DateTimeField()),
            ],
            options={
                'db_table': 'multi_payments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Notifications',
            fields=[
                ('id', models.CharField(max_length=36, primary_key=True, serialize=False)),
                ('type', models.CharField(max_length=191)),
                ('notifiable_id', models.PositiveIntegerField()),
                ('notifiable_type', models.CharField(max_length=191)),
                ('data', models.TextField()),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'notifications',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OauthAccessTokens',
            fields=[
                ('id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('client_id', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=191, null=True)),
                ('scopes', models.TextField(blank=True, null=True)),
                ('revoked', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'oauth_access_tokens',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OauthAuthCodes',
            fields=[
                ('id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('user_id', models.IntegerField()),
                ('client_id', models.IntegerField()),
                ('scopes', models.TextField(blank=True, null=True)),
                ('revoked', models.IntegerField()),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'oauth_auth_codes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OauthClients',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(max_length=191)),
                ('secret', models.CharField(max_length=100)),
                ('redirect', models.TextField()),
                ('personal_access_client', models.IntegerField()),
                ('password_client', models.IntegerField()),
                ('revoked', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'oauth_clients',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OauthPersonalAccessClients',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_id', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'oauth_personal_access_clients',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OauthRefreshTokens',
            fields=[
                ('id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('access_token_id', models.CharField(max_length=100)),
                ('revoked', models.IntegerField()),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'oauth_refresh_tokens',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OrderDetails',
            fields=[
                ('idorderdetails', models.AutoField(db_column='idorderDetails', primary_key=True, serialize=False)),
                ('weight', models.FloatField(blank=True, null=True)),
                ('length', models.FloatField(blank=True, null=True)),
                ('width', models.FloatField(blank=True, null=True)),
                ('height', models.FloatField(blank=True, null=True)),
                ('numberpackage', models.IntegerField(db_column='numberPackage')),
                ('numberofpackages', models.IntegerField(db_column='numberOfPackages')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('fee', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('trackingcode', models.CharField(blank=True, db_column='trackingCode', max_length=40, null=True)),
                ('guia', models.CharField(blank=True, max_length=60, null=True)),
                ('incidence', models.CharField(blank=True, max_length=191, null=True)),
                ('incidencetype', models.CharField(blank=True, db_column='incidenceType', max_length=191, null=True)),
                ('statusec', models.CharField(blank=True, db_column='statusEc', max_length=191, null=True)),
                ('statusclient', models.CharField(blank=True, db_column='statusClient', max_length=191, null=True)),
                ('statusstep', models.CharField(blank=True, db_column='statusStep', max_length=191, null=True)),
                ('created', models.DateTimeField()),
                ('modified', models.DateTimeField()),
                ('shippingid', models.CharField(db_column='shippingId', max_length=191)),
                ('receiverid', models.CharField(db_column='receiverId', max_length=191)),
                ('buyerid', models.CharField(db_column='buyerId', max_length=191)),
            ],
            options={
                'db_table': 'order_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('idorder', models.AutoField(db_column='idOrder', primary_key=True, serialize=False)),
                ('groupedorders', models.CharField(blank=True, db_column='groupedOrders', max_length=191, null=True)),
                ('iduserecommerce', models.IntegerField(blank=True, db_column='idUserEcommerce', null=True)),
                ('idecommerceorder', models.CharField(blank=True, db_column='idEcommerceOrder', max_length=40, null=True)),
                ('idecommerceorder2', models.BigIntegerField(blank=True, db_column='idEcommerceOrder2', null=True)),
                ('idecommerceproduct', models.CharField(blank=True, db_column='idEcommerceProduct', max_length=40, null=True)),
                ('idecommerceitem', models.BigIntegerField(blank=True, db_column='idEcommerceItem', null=True)),
                ('totalecommerceorderitems', models.IntegerField(blank=True, db_column='totalEcommerceOrderItems', null=True)),
                ('counterecommerceorderitems', models.IntegerField(blank=True, db_column='counterEcommerceOrderItems', null=True)),
                ('idlocationecommerce', models.CharField(blank=True, db_column='idLocationEcommerce', max_length=191, null=True)),
                ('idmultipayment', models.IntegerField(blank=True, db_column='idMultiPayment', null=True)),
                ('ispro', models.IntegerField(db_column='isPro')),
                ('isapiorder', models.IntegerField(db_column='isApiOrder')),
                ('ismultipackages', models.IntegerField(db_column='isMultiPackages')),
                ('isadvances', models.IntegerField(db_column='isAdvances')),
                ('numberofpackages', models.IntegerField(db_column='numberOfPackages')),
                ('prefquotation', models.CharField(blank=True, db_column='prefQuotation', max_length=12, null=True)),
                ('isquoted', models.IntegerField(blank=True, db_column='isQuoted', null=True)),
                ('isreadytopay', models.IntegerField(db_column='isReadyToPay')),
                ('proguidegenerated', models.IntegerField(blank=True, db_column='proGuideGenerated', null=True)),
                ('myreference', models.CharField(blank=True, db_column='myReference', max_length=28, null=True)),
                ('usertype', models.IntegerField(blank=True, db_column='userType', null=True)),
                ('firstname', models.CharField(db_column='firstName', max_length=150)),
                ('lastname', models.CharField(db_column='lastName', max_length=150)),
                ('email', models.CharField(max_length=250)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('contentvalue', models.DecimalField(blank=True, db_column='contentValue', decimal_places=2, max_digits=10, null=True)),
                ('insuredamount', models.FloatField(blank=True, db_column='insuredAmount', null=True)),
                ('discountcoupon', models.CharField(blank=True, db_column='discountCoupon', max_length=100, null=True)),
                ('discountamount', models.CharField(blank=True, db_column='discountAmount', max_length=45, null=True)),
                ('service', models.CharField(blank=True, max_length=255, null=True)),
                ('pickupdate', models.DateField(blank=True, db_column='pickupDate', null=True)),
                ('pickupschedule', models.IntegerField(blank=True, db_column='pickupSchedule', null=True)),
                ('info_status', models.CharField(blank=True, max_length=14, null=True)),
                ('paid', models.IntegerField()),
                ('localityfrom', models.CharField(blank=True, db_column='localityFrom', max_length=150, null=True)),
                ('localityto', models.CharField(blank=True, db_column='localityTo', max_length=150, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('cost', models.FloatField(blank=True, null=True)),
                ('carrierrate', models.FloatField(blank=True, db_column='carrierRate', null=True)),
                ('ratecurrency', models.CharField(blank=True, db_column='rateCurrency', max_length=4, null=True)),
                ('remotezonecharge', models.FloatField(blank=True, db_column='remoteZoneCharge', null=True)),
                ('tax', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('total', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('insurance', models.IntegerField(blank=True, null=True)),
                ('amountinsurance', models.FloatField(blank=True, db_column='amountInsurance', null=True)),
                ('amountinsurancews', models.FloatField(blank=True, db_column='amountInsuranceWS', null=True)),
                ('trackingcode', models.CharField(blank=True, db_column='trackingCode', max_length=40, null=True)),
                ('trackingcodeinternal', models.CharField(blank=True, db_column='trackingCodeInternal', max_length=40, null=True)),
                ('idcarrier', models.IntegerField(blank=True, db_column='idCarrier', null=True)),
                ('guia', models.TextField(blank=True, null=True)),
                ('idratemultipackages', models.IntegerField(blank=True, db_column='idRateMultiPackages', null=True)),
                ('idcashback', models.IntegerField(blank=True, db_column='idCashback', null=True)),
                ('idaddressshipper', models.IntegerField(blank=True, db_column='idAddressShipper', null=True)),
                ('sendercompany', models.CharField(blank=True, db_column='senderCompany', max_length=28, null=True)),
                ('senderfirstname', models.CharField(db_column='senderFirstName', max_length=150)),
                ('senderlastname', models.CharField(db_column='senderLastName', max_length=150)),
                ('senderemail', models.CharField(db_column='senderEmail', max_length=250)),
                ('senderphone', models.CharField(db_column='senderPhone', max_length=12)),
                ('senderaddress1', models.CharField(db_column='senderAddress1', max_length=250)),
                ('sendernumber', models.CharField(blank=True, db_column='senderNumber', max_length=10, null=True)),
                ('sendercolonia', models.CharField(blank=True, db_column='senderColonia', max_length=250, null=True)),
                ('sendercrossstreet', models.CharField(blank=True, db_column='senderCrossStreet', max_length=35, null=True)),
                ('senderreference', models.CharField(blank=True, db_column='senderReference', max_length=250, null=True)),
                ('senderzip', models.CharField(db_column='senderZip', max_length=6)),
                ('senderlocality', models.CharField(db_column='senderLocality', max_length=150)),
                ('senderstate', models.CharField(db_column='senderState', max_length=150)),
                ('sendercountry', models.CharField(db_column='senderCountry', max_length=150)),
                ('senderlat', models.FloatField(blank=True, db_column='senderLat', null=True)),
                ('senderlng', models.FloatField(blank=True, db_column='senderLng', null=True)),
                ('idaddressrecipient', models.IntegerField(blank=True, db_column='idAddressRecipient', null=True)),
                ('addresseecompany', models.CharField(blank=True, db_column='addresseeCompany', max_length=28, null=True)),
                ('addresseefirstname', models.CharField(db_column='addresseeFirstName', max_length=150)),
                ('addresseelastname', models.CharField(db_column='addresseeLastName', max_length=150)),
                ('addresseeemail', models.CharField(db_column='addresseeEmail', max_length=250)),
                ('addresseephone', models.CharField(db_column='addresseePhone', max_length=12)),
                ('addresseeaddress1', models.CharField(db_column='addresseeAddress1', max_length=250)),
                ('addresseenumber', models.CharField(blank=True, db_column='addresseeNumber', max_length=10, null=True)),
                ('addresseecolonia', models.CharField(blank=True, db_column='addresseeColonia', max_length=250, null=True)),
                ('addresseecrossstreet', models.CharField(blank=True, db_column='addresseeCrossStreet', max_length=35, null=True)),
                ('addresseereference', models.CharField(blank=True, db_column='addresseeReference', max_length=250, null=True)),
                ('addresseezip', models.CharField(db_column='addresseeZip', max_length=6)),
                ('addresseelocality', models.CharField(db_column='addresseeLocality', max_length=150)),
                ('addresseestate', models.CharField(db_column='addresseeState', max_length=150)),
                ('addresseecountry', models.CharField(db_column='addresseeCountry', max_length=150)),
                ('addresseelat', models.FloatField(blank=True, db_column='addresseeLat', null=True)),
                ('addresseelng', models.FloatField(blank=True, db_column='addresseeLng', null=True)),
                ('invoicerfc', models.CharField(db_column='invoiceRFC', max_length=30)),
                ('invoicecompany', models.CharField(db_column='invoiceCompany', max_length=255)),
                ('invoicefirstname', models.CharField(db_column='invoiceFirstName', max_length=150)),
                ('invoicelastname', models.CharField(db_column='invoiceLastName', max_length=150)),
                ('invoiceemail', models.CharField(db_column='invoiceEmail', max_length=250)),
                ('invoicephone', models.CharField(db_column='invoicePhone', max_length=12)),
                ('invoiceaddress1', models.CharField(db_column='invoiceAddress1', max_length=250)),
                ('invoicecolonia', models.CharField(blank=True, db_column='invoiceColonia', max_length=250, null=True)),
                ('invoicezip', models.CharField(db_column='invoiceZip', max_length=6)),
                ('invoicelocality', models.CharField(db_column='invoiceLocality', max_length=150)),
                ('invoicestate', models.CharField(db_column='invoiceState', max_length=150)),
                ('invoicecountry', models.CharField(db_column='invoiceCountry', max_length=150)),
                ('carrierinvoiceweight', models.FloatField(blank=True, db_column='carrierInvoiceWeight', null=True)),
                ('carrierinvoicerate', models.FloatField(blank=True, db_column='carrierInvoiceRate', null=True)),
                ('carrierinvoicetotal', models.FloatField(blank=True, db_column='carrierInvoiceTotal', null=True)),
                ('paymentmethod', models.CharField(blank=True, db_column='paymentMethod', max_length=50, null=True)),
                ('paymentcommissionpercentage', models.FloatField(blank=True, db_column='paymentCommissionPercentage', null=True)),
                ('paymentcommissionfixed', models.FloatField(blank=True, db_column='paymentCommissionFixed', null=True)),
                ('paymentcommissiontotal', models.FloatField(blank=True, db_column='paymentCommissionTotal', null=True)),
                ('paymentday', models.DateTimeField(blank=True, db_column='paymentDay', null=True)),
                ('paymentreference', models.CharField(blank=True, db_column='paymentReference', max_length=45, null=True)),
                ('pickup', models.IntegerField()),
                ('pickupid', models.CharField(blank=True, db_column='pickupID', max_length=18, null=True)),
                ('invoiceticket', models.IntegerField(db_column='invoiceTicket')),
                ('canceled', models.IntegerField()),
                ('cancellation_reason', models.CharField(blank=True, max_length=255, null=True)),
                ('cancellation_date', models.DateTimeField(blank=True, null=True)),
                ('created', models.DateTimeField()),
                ('modified', models.DateTimeField()),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('statusec', models.CharField(blank=True, db_column='statusEc', max_length=120, null=True)),
                ('statusclient', models.CharField(blank=True, db_column='statusClient', max_length=120, null=True)),
                ('incidence', models.IntegerField(blank=True, null=True)),
                ('incidencetype', models.CharField(blank=True, db_column='incidenceType', max_length=40, null=True)),
                ('statusstep', models.CharField(blank=True, db_column='statusStep', max_length=45, null=True)),
                ('intransitnotificationdelivered', models.IntegerField(db_column='inTransitNotificationDelivered')),
                ('arrivaldate', models.DateField(blank=True, db_column='arrivalDate', null=True)),
                ('isdownloadguide', models.IntegerField(db_column='isDownloadGuide')),
            ],
            options={
                'db_table': 'orders',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OrderStatus',
            fields=[
                ('idorderstatus', models.AutoField(db_column='idOrderStatus', primary_key=True, serialize=False)),
                ('orderstatus', models.CharField(db_column='orderStatus', max_length=150)),
                ('created', models.DateTimeField()),
                ('modified', models.DateTimeField()),
            ],
            options={
                'db_table': 'order_status',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OrderStatusLog',
            fields=[
                ('idorderstatuslog', models.AutoField(db_column='idOrderStatusLog', primary_key=True, serialize=False)),
                ('idorder', models.IntegerField(db_column='idOrder')),
                ('idorderdetails', models.IntegerField(blank=True, db_column='idorderDetails', null=True)),
                ('statusec', models.CharField(db_column='statusEc', max_length=120)),
                ('statusclient', models.CharField(db_column='statusClient', max_length=120)),
                ('incidence', models.IntegerField()),
                ('incidencetype', models.CharField(blank=True, db_column='incidenceType', max_length=40, null=True)),
                ('status1', models.CharField(max_length=45)),
                ('status2', models.CharField(blank=True, max_length=45, null=True)),
                ('request', models.TextField(blank=True, null=True)),
                ('response', models.TextField(blank=True, null=True)),
                ('logdate', models.DateTimeField(db_column='logDate')),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'order_status_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Packaging',
            fields=[
                ('idpacking', models.AutoField(db_column='idPacking', primary_key=True, serialize=False)),
                ('iduser', models.IntegerField(db_column='idUser')),
                ('name', models.CharField(max_length=30)),
                ('length', models.FloatField()),
                ('width', models.FloatField()),
                ('height', models.FloatField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'packaging',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PaymentMethods',
            fields=[
                ('idpaymentmethod', models.AutoField(db_column='idPaymentMethod', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=45)),
                ('environment', models.CharField(max_length=18)),
                ('available', models.IntegerField()),
            ],
            options={
                'db_table': 'payment_methods',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Pickups',
            fields=[
                ('idpickup', models.AutoField(db_column='idPickup', primary_key=True, serialize=False)),
                ('pickup_date', models.DateTimeField()),
                ('status', models.IntegerField()),
                ('idcarrier', models.IntegerField(db_column='idCarrier')),
                ('idproduct', models.IntegerField(blank=True, db_column='idProduct', null=True)),
                ('idorder', models.IntegerField(blank=True, db_column='idOrder', null=True)),
                ('iduser', models.IntegerField(blank=True, db_column='idUser', null=True)),
                ('firstname', models.CharField(blank=True, max_length=150, null=True)),
                ('lastname', models.CharField(blank=True, max_length=150, null=True)),
                ('email', models.CharField(blank=True, max_length=150, null=True)),
                ('phone', models.CharField(blank=True, max_length=18, null=True)),
                ('address', models.CharField(max_length=150)),
                ('number', models.CharField(blank=True, max_length=5, null=True)),
                ('locality', models.CharField(blank=True, max_length=150, null=True)),
                ('colonia', models.CharField(blank=True, max_length=150, null=True)),
                ('zipcode', models.CharField(max_length=6)),
                ('state', models.CharField(blank=True, max_length=40, null=True)),
                ('crossstreet', models.CharField(blank=True, db_column='crossStreet', max_length=35, null=True)),
                ('reference', models.CharField(blank=True, max_length=45, null=True)),
                ('pickup_id', models.CharField(blank=True, max_length=45, null=True)),
                ('error_ws', models.CharField(blank=True, max_length=120, null=True)),
                ('created', models.DateTimeField()),
                ('modified', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pickups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PProfile',
            fields=[
                ('idprofile', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=100)),
                ('created', models.DateTimeField()),
                ('modified', models.DateTimeField()),
            ],
            options={
                'db_table': 'p_profile',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductDiscountLog',
            fields=[
                ('idproductdiscountlog', models.AutoField(db_column='idProductDiscountLog', primary_key=True, serialize=False)),
                ('idproduct', models.IntegerField(db_column='idProduct')),
                ('iduser', models.IntegerField(db_column='idUser')),
                ('olddiscount', models.FloatField(db_column='oldDiscount')),
                ('newdiscount', models.FloatField(db_column='newDiscount')),
                ('created', models.DateTimeField()),
            ],
            options={
                'db_table': 'product_discount_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('idproduct', models.AutoField(db_column='idProduct', primary_key=True, serialize=False)),
                ('servicetypeid', models.CharField(blank=True, db_column='serviceTypeId', max_length=18, null=True)),
                ('code', models.CharField(max_length=45)),
                ('wscode', models.CharField(blank=True, db_column='wsCode', max_length=42, null=True)),
                ('product', models.CharField(max_length=200)),
                ('url', models.CharField(max_length=50)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
                ('available', models.IntegerField()),
                ('trackable', models.IntegerField()),
                ('terms', models.TextField()),
                ('daysmin', models.IntegerField(blank=True, db_column='daysMin', null=True)),
                ('days', models.FloatField(blank=True, null=True)),
                ('delayofdays', models.IntegerField(db_column='delayOfDays')),
                ('arrivesatmin', models.TimeField(blank=True, db_column='arrivesAtMin', null=True)),
                ('arrivesatfrom', models.TimeField(blank=True, db_column='arrivesAtFrom', null=True)),
                ('arrivesat', models.TimeField(db_column='arrivesAt')),
                ('discount', models.FloatField(blank=True, null=True)),
                ('orderhourlimit', models.TimeField(db_column='orderHourLimit')),
                ('outboundendpoint', models.IntegerField()),
                ('inboundendpoint', models.IntegerField()),
                ('created', models.DateTimeField()),
                ('modified', models.DateTimeField()),
                ('weightincluded', models.FloatField(blank=True, db_column='weightIncluded', null=True)),
                ('weightmax', models.FloatField(blank=True, db_column='weightMax', null=True)),
                ('widthmax', models.FloatField(blank=True, db_column='widthMax', null=True)),
                ('heightmax', models.FloatField(blank=True, db_column='heightMax', null=True)),
                ('widemax', models.FloatField(blank=True, db_column='wideMax', null=True)),
                ('saturdaycollectionoverprice', models.FloatField(blank=True, db_column='saturdayCollectionOverprice', null=True)),
                ('remotezonecollectionoverprice', models.FloatField(blank=True, db_column='remoteZoneCollectionOverprice', null=True)),
                ('remotezonedeliveryoverprice', models.FloatField(blank=True, db_column='remoteZoneDeliveryOverprice', null=True)),
                ('multipackageoverprice', models.FloatField(blank=True, db_column='multipackageOverprice', null=True)),
            ],
            options={
                'db_table': 'products',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Rates',
            fields=[
                ('idrate', models.AutoField(db_column='idRate', primary_key=True, serialize=False)),
                ('ratetype', models.IntegerField(db_column='rateType')),
                ('weight_min', models.DecimalField(decimal_places=2, max_digits=6)),
                ('weight_max', models.DecimalField(decimal_places=2, max_digits=6)),
                ('carrierrate', models.FloatField(blank=True, db_column='carrierRate', null=True)),
                ('overweightcarrierrate', models.FloatField(blank=True, db_column='overweightCarrierRate', null=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('overweight', models.FloatField(blank=True, null=True)),
                ('cost', models.FloatField(blank=True, null=True)),
                ('overweightcost', models.FloatField(blank=True, db_column='overweightCost', null=True)),
                ('fuelcharge', models.FloatField(blank=True, db_column='fuelCharge', null=True)),
                ('remotezonecharge', models.FloatField(blank=True, db_column='remoteZoneCharge', null=True)),
                ('specialremotezonecharge', models.FloatField(db_column='specialRemoteZoneCharge')),
                ('fee', models.DecimalField(decimal_places=2, max_digits=10)),
                ('vehicle_type', models.CharField(blank=True, max_length=45, null=True)),
                ('ratedescription', models.CharField(blank=True, db_column='rateDescription', max_length=150, null=True)),
                ('isocurre', models.CharField(db_column='isOcurre', max_length=191)),
                ('daystodeliver', models.IntegerField(blank=True, db_column='daysToDeliver', null=True)),
                ('datedeliverypromise', models.DateTimeField(blank=True, db_column='dateDeliveryPromise', null=True)),
                ('ratecurrency', models.CharField(db_column='rateCurrency', max_length=4)),
                ('weight', models.FloatField(blank=True, null=True)),
                ('length', models.FloatField(blank=True, null=True)),
                ('width', models.FloatField(blank=True, null=True)),
                ('height', models.FloatField(blank=True, null=True)),
                ('totaldays', models.IntegerField(blank=True, db_column='totalDays', null=True)),
                ('senderzip', models.CharField(blank=True, db_column='senderZip', max_length=6, null=True)),
                ('addresseezip', models.CharField(blank=True, db_column='addresseeZip', max_length=6, null=True)),
                ('available', models.IntegerField()),
                ('isadvances', models.IntegerField(db_column='isAdvances')),
                ('iduser', models.IntegerField(blank=True, db_column='idUser', null=True)),
                ('created', models.DateTimeField()),
                ('modified', models.DateTimeField()),
                ('max_volume', models.DecimalField(blank=True, decimal_places=2, max_digits=11, null=True)),
                ('min_volume', models.DecimalField(blank=True, decimal_places=2, max_digits=11, null=True)),
            ],
            options={
                'db_table': 'rates',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ratesmultipackages',
            fields=[
                ('idrate', models.AutoField(db_column='idRate', primary_key=True, serialize=False)),
                ('idproduct', models.IntegerField(db_column='idProduct')),
                ('carrierrate', models.FloatField(db_column='carrierRate')),
                ('price', models.FloatField()),
                ('cost', models.FloatField()),
                ('weight', models.TextField()),
                ('length', models.TextField()),
                ('width', models.TextField()),
                ('height', models.TextField()),
                ('senderzip', models.CharField(db_column='senderZip', max_length=191)),
                ('addresseezip', models.CharField(db_column='addresseeZip', max_length=191)),
                ('totaldays', models.IntegerField(db_column='totalDays')),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ratesMultiPackages',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reasons',
            fields=[
                ('idreason', models.AutoField(db_column='idReason', primary_key=True, serialize=False)),
                ('reason', models.CharField(max_length=60)),
                ('type', models.CharField(max_length=24)),
            ],
            options={
                'db_table': 'reasons',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sessions',
            fields=[
                ('id', models.CharField(max_length=191, primary_key=True, serialize=False, unique=True)),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('ip_address', models.CharField(blank=True, max_length=45, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('payload', models.TextField()),
                ('last_activity', models.IntegerField()),
            ],
            options={
                'db_table': 'sessions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Settlement',
            fields=[
                ('idsettlement', models.AutoField(primary_key=True, serialize=False)),
                ('idzipcode', models.IntegerField(db_column='idZipCode')),
                ('settlementtype', models.CharField(blank=True, db_column='settlementType', max_length=64, null=True)),
                ('settlementtypeabbr', models.CharField(blank=True, db_column='settlementTypeAbbr', max_length=16, null=True)),
                ('settlementname', models.CharField(db_column='settlementName', max_length=128)),
            ],
            options={
                'db_table': 'settlement',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SettlementType',
            fields=[
                ('idsettlementtype', models.AutoField(db_column='idSettlementType', primary_key=True, serialize=False)),
                ('abbreviation', models.CharField(blank=True, max_length=10, null=True)),
                ('description', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'settlement_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='States',
            fields=[
                ('idstate', models.AutoField(db_column='idState', primary_key=True, serialize=False)),
                ('state', models.CharField(max_length=150)),
                ('created', models.DateTimeField()),
                ('modified', models.DateTimeField()),
            ],
            options={
                'db_table': 'states',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StatusMapping',
            fields=[
                ('idstatusmapping', models.AutoField(db_column='idStatusMapping', primary_key=True, serialize=False)),
                ('idcarrier', models.IntegerField(db_column='idCarrier')),
                ('statusec', models.CharField(db_column='statusEc', max_length=120)),
                ('statusclient', models.CharField(db_column='statusClient', max_length=120)),
                ('incidence', models.IntegerField()),
                ('incidencetype', models.CharField(blank=True, db_column='incidenceType', max_length=40, null=True)),
                ('status1', models.CharField(max_length=255)),
                ('status2', models.CharField(blank=True, max_length=255, null=True)),
                ('undefined', models.IntegerField()),
                ('statusstep', models.CharField(db_column='statusStep', max_length=45)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'status_mapping',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TempMultipackagesHistory',
            fields=[
                ('idorderhistory', models.AutoField(db_column='idorderHistory', primary_key=True, serialize=False)),
                ('idorder', models.IntegerField(db_column='idOrder')),
                ('packages', models.IntegerField()),
                ('created', models.DateTimeField()),
                ('modified', models.DateTimeField()),
            ],
            options={
                'db_table': 'temp_multiPackages_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserActivations',
            fields=[
                ('iduseractivation', models.AutoField(db_column='idUserActivation', primary_key=True, serialize=False)),
                ('iduser', models.IntegerField(db_column='idUser')),
                ('token', models.CharField(max_length=191)),
                ('created', models.DateTimeField()),
            ],
            options={
                'db_table': 'user_activations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserBackend',
            fields=[
                ('iduserbackend', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=100)),
                ('password', models.CharField(max_length=100)),
                ('remember_token', models.CharField(blank=True, max_length=100, null=True)),
                ('created', models.DateTimeField()),
                ('modified', models.DateTimeField()),
            ],
            options={
                'db_table': 'user_backend',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserBrand',
            fields=[
                ('iduserbrand', models.AutoField(db_column='idUserBrand', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('active', models.IntegerField()),
                ('website', models.CharField(blank=True, max_length=100, null=True)),
                ('logo', models.CharField(blank=True, max_length=191, null=True)),
                ('color', models.CharField(blank=True, max_length=15, null=True)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('modified', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'user_brand',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserCarriers',
            fields=[
                ('idusercarrier', models.AutoField(db_column='idUserCarrier', primary_key=True, serialize=False)),
                ('iduser', models.IntegerField(db_column='idUser')),
                ('idcarrier', models.IntegerField(db_column='idCarrier')),
                ('carrier', models.CharField(max_length=40)),
                ('status', models.CharField(max_length=40)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'user_carriers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserConfig99Min',
            fields=[
                ('idconfig99min', models.AutoField(db_column='idConfig99min', primary_key=True, serialize=False)),
                ('api_key', models.CharField(max_length=191)),
                ('user_id', models.CharField(max_length=191)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'user_config99min',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserConfigaeroflash',
            fields=[
                ('idconfigaeroflash', models.AutoField(db_column='idConfigAeroflash', primary_key=True, serialize=False)),
                ('user', models.CharField(max_length=191)),
                ('password', models.CharField(max_length=191)),
                ('contract', models.CharField(max_length=191)),
                ('num_client', models.CharField(max_length=191)),
                ('clave_servicio', models.CharField(max_length=191)),
                ('token', models.CharField(max_length=191)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'user_configAeroflash',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserConfigdhl',
            fields=[
                ('idconfigdhl', models.AutoField(db_column='idConfigDhl', primary_key=True, serialize=False)),
                ('account_number', models.CharField(max_length=191)),
                ('site_id', models.CharField(max_length=191)),
                ('password', models.CharField(max_length=191)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'user_configDhl',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserConfigestafeta',
            fields=[
                ('idconfigestafeta', models.AutoField(db_column='idConfigEstafeta', primary_key=True, serialize=False)),
                ('shipment_client', models.CharField(max_length=191)),
                ('shipment_office_num', models.CharField(max_length=191)),
                ('shipment_suscriber_id', models.CharField(max_length=191)),
                ('shipment_user', models.CharField(max_length=191)),
                ('shipment_password', models.CharField(max_length=191)),
                ('rate_id_user', models.CharField(max_length=191)),
                ('rate_user', models.CharField(max_length=191)),
                ('rate_password', models.CharField(max_length=191)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'user_configEstafeta',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserConfigfedex',
            fields=[
                ('idconfigfedex', models.AutoField(db_column='idConfigFedex', primary_key=True, serialize=False)),
                ('account_number', models.CharField(max_length=191)),
                ('key', models.CharField(max_length=191)),
                ('meter_number', models.CharField(max_length=191)),
                ('password', models.CharField(max_length=191)),
                ('threshold_account_number', models.CharField(max_length=191)),
                ('threshold_key', models.CharField(max_length=191)),
                ('threshold_meter_number', models.CharField(max_length=191)),
                ('threshold_password', models.CharField(max_length=191)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'user_configFedex',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserConfigredpack',
            fields=[
                ('idconfigredpack', models.AutoField(db_column='idConfigRedpack', primary_key=True, serialize=False)),
                ('pin', models.CharField(max_length=191)),
                ('user_id', models.CharField(max_length=191)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'user_configRedpack',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserCredit',
            fields=[
                ('idusercredit', models.AutoField(db_column='idUserCredit', primary_key=True, serialize=False)),
                ('iduserbackend', models.IntegerField(db_column='idUserBackend')),
                ('idmultipayment', models.IntegerField(blank=True, db_column='idMultiPayment', null=True)),
                ('idusercreditbonus', models.IntegerField(blank=True, db_column='idUserCreditBonus', null=True)),
                ('type', models.IntegerField()),
                ('amount', models.FloatField(blank=True, null=True)),
                ('paymentmethod', models.CharField(blank=True, db_column='paymentMethod', max_length=45, null=True)),
                ('paymentreference', models.CharField(blank=True, db_column='paymentReference', max_length=45, null=True)),
                ('idcashback', models.IntegerField(blank=True, db_column='idCashback', null=True)),
                ('reason', models.CharField(blank=True, max_length=255, null=True)),
                ('created', models.DateTimeField()),
                ('modified', models.DateTimeField(blank=True, null=True)),
                ('file', models.CharField(blank=True, max_length=38, null=True)),
                ('transferid', models.CharField(blank=True, db_column='transferID', max_length=20, null=True)),
                ('isloss', models.IntegerField(blank=True, db_column='isLoss', null=True)),
            ],
            options={
                'db_table': 'user_credit',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserDetails',
            fields=[
                ('iduserdetail', models.AutoField(db_column='idUserDetail', primary_key=True, serialize=False)),
                ('department', models.CharField(blank=True, max_length=191, null=True)),
                ('company', models.CharField(blank=True, max_length=120, null=True)),
                ('issellingonline', models.IntegerField(blank=True, db_column='isSellingOnline', null=True)),
                ('estimatedmaxticketsamount', models.CharField(blank=True, db_column='estimatedMaxTicketsAmount', max_length=18, null=True)),
                ('businesscategory', models.CharField(blank=True, db_column='businessCategory', max_length=40, null=True)),
                ('taxsituation', models.CharField(blank=True, db_column='taxSituation', max_length=40, null=True)),
                ('website', models.CharField(blank=True, max_length=120, null=True)),
                ('projecttype', models.CharField(blank=True, db_column='projectType', max_length=40, null=True)),
                ('ecommerce', models.CharField(blank=True, max_length=40, null=True)),
                ('marketplace', models.CharField(blank=True, max_length=40, null=True)),
                ('customsystem', models.CharField(blank=True, db_column='customSystem', max_length=40, null=True)),
                ('language', models.CharField(blank=True, max_length=40, null=True)),
                ('tradename', models.CharField(blank=True, max_length=120, null=True)),
                ('facebook', models.CharField(blank=True, max_length=180, null=True)),
                ('inactivecarriers', models.CharField(blank=True, db_column='inactiveCarriers', max_length=120, null=True)),
                ('businessname', models.CharField(blank=True, db_column='businessName', max_length=120, null=True)),
                ('rfc', models.CharField(blank=True, max_length=18, null=True)),
                ('taxidentificationcard', models.TextField(blank=True, db_column='taxIdentificationCard', null=True)),
                ('constitutiveact', models.TextField(blank=True, db_column='constitutiveAct', null=True)),
                ('phonefiscal', models.CharField(blank=True, db_column='phoneFiscal', max_length=18, null=True)),
                ('idfiscaladdress', models.IntegerField(blank=True, db_column='idFiscalAddress', null=True)),
                ('idreturnaddress', models.IntegerField(blank=True, db_column='idReturnAddress', null=True)),
                ('representativename', models.CharField(blank=True, db_column='representativeName', max_length=180, null=True)),
                ('representativeidentification', models.TextField(blank=True, db_column='representativeIdentification', null=True)),
                ('passport', models.TextField(blank=True, null=True)),
                ('curp', models.TextField(blank=True, null=True)),
                ('producttype1', models.CharField(blank=True, db_column='productType1', max_length=60, null=True)),
                ('producttype2', models.CharField(blank=True, db_column='productType2', max_length=60, null=True)),
                ('producttype3', models.CharField(blank=True, db_column='productType3', max_length=60, null=True)),
                ('commonorigin1', models.CharField(blank=True, db_column='commonOrigin1', max_length=120, null=True)),
                ('commonorigin2', models.CharField(blank=True, db_column='commonOrigin2', max_length=120, null=True)),
                ('commonorigin3', models.CharField(blank=True, db_column='commonOrigin3', max_length=120, null=True)),
                ('commondestination1', models.CharField(blank=True, db_column='commonDestination1', max_length=120, null=True)),
                ('commondestination2', models.CharField(blank=True, db_column='commonDestination2', max_length=120, null=True)),
                ('commondestination3', models.CharField(blank=True, db_column='commonDestination3', max_length=120, null=True)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('modified', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'user_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserEcommerce',
            fields=[
                ('iduserecommerce', models.AutoField(db_column='idUserEcommerce', primary_key=True, serialize=False)),
                ('iduser', models.IntegerField(db_column='idUser')),
                ('idecommerce', models.IntegerField(db_column='idEcommerce')),
                ('idversion', models.CharField(db_column='idVersion', max_length=120)),
                ('url', models.CharField(max_length=120)),
                ('user', models.CharField(max_length=120)),
                ('password', models.CharField(max_length=120)),
                ('wskey', models.CharField(max_length=120)),
                ('company', models.CharField(max_length=28)),
                ('firstname', models.CharField(db_column='firstName', max_length=150)),
                ('lastname', models.CharField(db_column='lastName', max_length=150)),
                ('email', models.CharField(max_length=250)),
                ('phone', models.CharField(max_length=12)),
                ('address', models.CharField(max_length=250)),
                ('number', models.CharField(max_length=10)),
                ('colonia', models.CharField(max_length=250)),
                ('crossstreet', models.CharField(db_column='crossStreet', max_length=35)),
                ('reference', models.CharField(max_length=250)),
                ('zip', models.CharField(max_length=6)),
                ('cotizationorder', models.CharField(db_column='cotizationOrder', max_length=10)),
                ('updateecommerce', models.IntegerField(db_column='updateEcommerce')),
                ('status', models.IntegerField()),
                ('isvirtual', models.IntegerField(db_column='isVirtual')),
                ('usebilling', models.IntegerField(db_column='useBilling')),
                ('importingorders', models.IntegerField(db_column='importingOrders')),
                ('formshopifytype', models.IntegerField(db_column='formShopifyType')),
                ('locationshopify', models.IntegerField(db_column='locationShopify')),
                ('statustoimportshopify', models.CharField(db_column='statusToImportShopify', max_length=191)),
                ('statuspaymenttoimportshopify', models.CharField(db_column='statusPaymentToImportShopify', max_length=191)),
                ('statustoimport', models.CharField(db_column='statusToImport', max_length=191)),
                ('lastconnection', models.DateTimeField(db_column='lastConnection')),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('access_token_mercadolibre', models.CharField(max_length=191)),
                ('refresh_token_mercadolibre', models.CharField(max_length=191)),
            ],
            options={
                'db_table': 'user_ecommerce',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserGroups',
            fields=[
                ('idusergroup', models.AutoField(db_column='idUserGroup', primary_key=True, serialize=False)),
                ('idcashback', models.IntegerField(blank=True, db_column='idCashback', null=True)),
                ('name', models.CharField(blank=True, max_length=45, null=True)),
                ('businessname', models.CharField(blank=True, db_column='businessName', max_length=125, null=True)),
                ('rfc', models.CharField(blank=True, max_length=16, null=True)),
                ('description', models.CharField(blank=True, max_length=256, null=True)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('modified', models.DateTimeField(blank=True, null=True)),
                ('deleted', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserLabel',
            fields=[
                ('iduserlabel', models.AutoField(db_column='idUserLabel', primary_key=True, serialize=False)),
                ('iduser', models.IntegerField(db_column='idUser')),
                ('idcarrier', models.IntegerField(db_column='idCarrier')),
                ('idlabel', models.IntegerField(db_column='idLabel')),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'user_label',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('iduser', models.AutoField(db_column='idUser', primary_key=True, serialize=False)),
                ('iddiscount', models.IntegerField(blank=True, db_column='idDiscount', null=True)),
                ('miniumiddiscount', models.IntegerField(blank=True, db_column='miniumIdDiscount', null=True)),
                ('discountupdatedat', models.DateField(blank=True, db_column='discountUpdatedAt', null=True)),
                ('iddealer', models.IntegerField(blank=True, db_column='idDealer', null=True)),
                ('idusergroup', models.IntegerField(blank=True, db_column='idUserGroup', null=True)),
                ('username', models.CharField(blank=True, max_length=150, null=True)),
                ('email', models.CharField(max_length=250)),
                ('password', models.CharField(max_length=50)),
                ('firstname', models.CharField(max_length=150)),
                ('lastname', models.CharField(max_length=150)),
                ('rfc', models.CharField(blank=True, max_length=30, null=True)),
                ('company', models.CharField(blank=True, max_length=100, null=True)),
                ('type', models.IntegerField(blank=True, null=True)),
                ('credit', models.FloatField()),
                ('activated', models.IntegerField()),
                ('ispro', models.IntegerField(db_column='isPro')),
                ('isvalidpro', models.IntegerField(db_column='isValidPro')),
                ('proterms', models.IntegerField(db_column='proTerms')),
                ('thermallabel', models.IntegerField(blank=True, db_column='thermalLabel', null=True)),
                ('apikey', models.CharField(blank=True, db_column='apiKey', max_length=45, null=True)),
                ('changepasswordtoken', models.CharField(blank=True, db_column='changePasswordToken', max_length=100, null=True)),
                ('created', models.DateTimeField()),
                ('modified', models.DateTimeField()),
                ('phone', models.CharField(max_length=18)),
                ('remember_token', models.CharField(blank=True, max_length=100, null=True)),
                ('id_conekta_client', models.CharField(blank=True, max_length=191, null=True)),
                ('lockeddiscount', models.IntegerField(db_column='lockedDiscount')),
            ],
            options={
                'db_table': 'users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Warnings',
            fields=[
                ('idwarning', models.AutoField(db_column='idWarning', primary_key=True, serialize=False)),
                ('warning', models.CharField(max_length=60)),
                ('idorder', models.IntegerField(blank=True, db_column='idOrder', null=True)),
                ('iduser', models.IntegerField(blank=True, db_column='idUser', null=True)),
                ('created', models.DateTimeField()),
                ('modified', models.DateTimeField()),
            ],
            options={
                'db_table': 'warnings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ZipCodes',
            fields=[
                ('idzipcode', models.AutoField(db_column='idZipCode', primary_key=True, serialize=False)),
                ('zipcode', models.CharField(db_column='zipCode', max_length=6)),
                ('locality', models.CharField(max_length=250)),
                ('created', models.DateTimeField()),
                ('modified', models.DateTimeField()),
                ('weight', models.IntegerField(blank=True, null=True)),
                ('af_ocurre', models.IntegerField()),
                ('fx_ocurre', models.IntegerField()),
                ('nnm_ocurre', models.IntegerField()),
                ('rp_ocurre', models.IntegerField()),
                ('est_ocurre', models.IntegerField()),
                ('dhl_ocurre', models.IntegerField()),
                ('tg_ocurre', models.IntegerField()),
                ('plto_ocurre', models.IntegerField()),
                ('pltp_ocurre', models.IntegerField()),
                ('crs_ocurre', models.IntegerField()),
            ],
            options={
                'db_table': 'zip_codes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ZipCodesByGroups',
            fields=[
                ('idzipcodebygroup', models.AutoField(db_column='idZipCodeByGroup', primary_key=True, serialize=False)),
                ('loaddate', models.DateTimeField(db_column='loadDate')),
            ],
            options={
                'db_table': 'zip_codes_by_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ZipGroups',
            fields=[
                ('idzipgroup', models.AutoField(db_column='idZipGroup', primary_key=True, serialize=False)),
                ('zipgroup', models.CharField(db_column='zipGroup', max_length=30)),
                ('created', models.DateTimeField()),
                ('modified', models.DateTimeField()),
            ],
            options={
                'db_table': 'zip_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Zones',
            fields=[
                ('idzone', models.AutoField(db_column='idZone', primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=10)),
                ('zone', models.CharField(max_length=100)),
                ('created', models.DateTimeField()),
                ('modified', models.DateTimeField()),
            ],
            options={
                'db_table': 'zones',
                'managed': False,
            },
        ),
    ]
